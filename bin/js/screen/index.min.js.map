{"version":3,"sources":["index.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Object","defineProperty","value","setMatrixArrayType","type","ARRAY_TYPE","toRadian","degree","equals","b","Math","abs","EPSILON","max","RANDOM","Float32Array","Array","random","PI","hypot","y","arguments","sqrt","2","vec4","vec3","vec2","quat2","quat","mat4","mat3","mat2d","mat2","glMatrix","_interopRequireWildcard","obj","__esModule","newObj","key","prototype","hasOwnProperty","desc","getOwnPropertyDescriptor","get","set","./common.js","./mat2.js","./mat2d.js","./mat3.js","./mat4.js","./quat.js","./quat2.js","./vec2.js","./vec3.js","./vec4.js","3","create","out","clone","copy","identity","fromValues","m00","m01","m10","m11","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","rotate","rad","s","sin","cos","scale","v","v0","v1","fromRotation","fromScaling","str","frob","LDU","L","D","U","add","subtract","exactEquals","b0","b1","b2","b3","multiplyScalar","multiplyScalarAndAdd","sub","mul","4","d","tx","ty","aa","ab","ac","ad","atx","aty","a4","a5","translate","fromTranslation","b4","b5","5","fromMat4","m02","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","x","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b00","b02","b03","b04","b05","b06","b07","b08","b09","b10","projection","width","height","a6","a7","a8","b6","b7","b8","b12","b20","b22","6","m03","m13","m23","m30","m31","m32","m33","axis","len","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","xy","xz","yz","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","a9","a14","a15","b9","b13","b14","b15","7","setAxisAngle","getAxisAngle","out_axis","acos","getAngle","dotproduct","dot","calculateW","exp","ln","pow","slerp","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fromEuler","halfToRad","cx","cy","cz","setAxes","sqlerp","rotationTo","normalize","sqrLen","squaredLength","lerp","et","atan2","log","omega","cosom","sinom","scale0","scale1","m","fRoot","fTrace","j","k","tmpvec3","xUnitVec3","yUnitVec3","cross","temp1","temp2","matr","view","8","dq","w1","w2","fromRotationTranslationValues","outer","getDual","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","qx","qy","qz","qw","rotateByQuatPrepend","rotateAroundAxis","axisLength","mt","sqlen","a_dot_b","setReal","getReal","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","9","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","negate","inverse","transformMat2","transformMat2d","transformMat3","transformMat4","p0","p1","sinC","cosC","angle","len1","len2","cosine","zero","forEach","sqrDist","dist","div","vec","stride","offset","count","fn","arg","l","10","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformQuat","uvx","uvy","uvz","uuvx","uuvy","uuvz","tempA","tempB","11","A","B","C","E","F","G","H","I","J","v2","v3","v4","s1","s2","ix","iy","iz","iw","12","global","define","amd","window","self","this","Matter","_dereq_","Body","Vertices","Vector","Sleeping","Common","Bounds","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","options","defaults","id","nextId","label","parts","plugin","vertices","fromPath","position","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","velocity","angularVelocity","isSensor","isStatic","isSleeping","motion","sleepThreshold","density","restitution","friction","frictionStatic","frictionAir","collisionFilter","category","mask","group","slop","timeScale","render","visible","opacity","sprite","xOffset","yOffset","lineWidth","body","extend","_initProperties","nextGroup","isNonColliding","nextCategory","bounds","positionPrev","anglePrev","parent","axes","update","area","mass","inertia","defaultFillStyle","choose","fillStyle","strokeStyle","settings","property","setStatic","setMass","setDensity","setInertia","setVertices","setPosition","setAngle","setVelocity","setAngularVelocity","setParts","part","_original","inverseMass","inverseInertia","moment","fromVertices","centre","autoHull","slice","push","concat","clockwiseSort","hull","hullCentre","total","_totalProperties","delta","rotateAbout","rotation","point","dx","dy","scaleX","scaleY","totalArea","totalInertia","circleRadius","deltaTime","correction","deltaTimeSquared","velocityPrevX","velocityPrevY","applyForce","properties","mult","../core/Common","../core/Sleeping","../geometry/Axes","../geometry/Bounds","../geometry/Vector","../geometry/Vertices","../render/Render","Composite","Events","isModified","bodies","constraints","composites","setModified","composite","updateParents","updateChildren","childComposite","object","objects","trigger","warn","addBody","addConstraint","addComposite","constraint","remove","deep","removeBody","removeConstraint","removeComposite","compositeA","compositeB","indexOf","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","filter","allBodies","allConstraints","allComposites","toString","move","rebase","recursive","../core/Events","./Body","World","gravity","../constraint/Constraint","./Composite","Contact","vertex","normalImpulse","tangentImpulse","index","Detector","SAT","Pair","collisions","broadphasePairs","engine","pairsTable","pairs","table","bodyA","bodyB","canCollide","overlaps","partA","partB","previousCollision","pair","isActive","collision","collides","collided","filterA","filterB","./Pair","./SAT","Grid","controller","detector","buckets","pairsList","bucketWidth","bucketHeight","grid","forceUpdate","col","row","bucket","bucketId","world","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","column","pairId","pairKeys","keys","./Detector","timestamp","parentA","parentB","contacts","activeContacts","separation","timeCreated","timeUpdated","supports","support","contactId","contact","depth","setActive","./Contact","Pairs","_pairMaxIdleLife","list","collisionStart","collisionActive","collisionEnd","activePairIds","removeOld","pairIndex","indexesToRemove","Query","Bodies","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","rectangle","outside","result","contains","../factory/Bodies","Resolver","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","normal","bodyBtoA","contactShare","_temp","tempC","tempD","penetration","postSolvePosition","preSolveVelocity","tangent","contactVertex","impulse","solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","perp","velocityPointB","relativeVelocity","normalVelocity","tangentVelocity","tangentSpeed","tangentVelocityDirection","sign","normalForce","clamp","maxFriction","oAcN","oBcN","share","contactNormalImpulse","contactTangentImpulse","overlapAB","overlapBA","minOverlap","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","reused","overlap","verticesB","_findSupports","verticesA","neg","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","vertexA","vertexB","nearestDistance","vertexToBody","bodyAPosition","Constraint","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","difference","massTotal","resistanceTotal","postSolveAll","13","MouseConstraint","Mouse","mouse","canvas","element","mouseConstraint","on","_triggerEvents","button","mouseEvents","sourceEvents","mousemove","mousedown","mouseup","clearSourceEvents","../body/Composite","../collision/Detector","../core/Mouse","./Constraint","14","_nextId","_seed","_nowStartTime","Date","argsStart","deepClone","source","prop","constructor","values","path","begin","end","split","val","shuffle","array","temp","choices","isElement","HTMLElement","nodeType","nodeName","isArray","isFunction","isPlainObject","isString","now","performance","webkitNow","_seededRandom","colorToNumber","colorString","replace","charAt","parseInt","logLevel","console","apply","info","haystack","needle","map","func","mapped","topologicalSort","graph","visited","node","_topologicalSort","neighbors","neighbor","chain","funcs","_chained","lastResult","args","chainPathBefore","base","chainPathAfter","_requireGlobal","globalName","moduleName","15","Engine","Render","positionIterations","velocityIterations","constraintIterations","enableSleeping","events","timing","broadphase","renderDefaults","metrics","extended","event","_bodiesApplyGravity","_bodiesUpdate","afterCollisions","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","../body/Body","../body/World","../collision/Grid","../collision/Pairs","../collision/Resolver","./Common","./Events","./Metrics","./Sleeping","16","eventNames","callback","name","names","off","join","callbacks","newCallbacks","eventClone","17","Plugin","version","uses","used","use","before","after","./Plugin","18","19","document","absolute","mousedownPosition","mouseupPosition","wheelDelta","pixelRatio","getAttribute","mousewheel","_getRelativeMousePosition","changedTouches","preventDefault","detail","setElement","addEventListener","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","documentElement","parentNode","scrollX","undefined","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","touches","pageX","pageY","clientWidth","clientHeight","20","_registry","register","isPlugin","registered","pluginVersion","versionParse","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","isFor","parsed","for","versionSatisfies","plugins","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","test","identifiers","isRange","isNaN","substr","operator","prerelease","rangeParsed","rangeParts","versionParsed","versionParts","21","Runner","_requestAnimationFrame","_cancelAnimationFrame","_frameTimeout","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","setTimeout","clearTimeout","runner","fps","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","frameRequestId","isFixed","enabled","deltaMin","deltaMax","run","time","tick","stop","start","./Engine","22","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","sleepingBody","movingBody","wasSleeping","23","decomp","chamfer","radius","quality","qualityMin","qualityMax","trapezoid","slope","verticesPath","x3","circle","maxSides","sides","polygon","theta","toFixed","vertexSets","flagInternal","removeCollinear","minimumArea","isConvex","concave","makeCCW","removeCollinearPoints","decomposed","quickDecomp","chunkVertices","pav","pbv","da","magnitudeSquared","db","isInternal","24","Composites","stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","size","car","wheelSize","wheelAOffset","wheelBOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","./Bodies","25","normalise","gradient","26","boundsA","boundsB","vector","shift","deltaX","deltaY","27","Svg","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","lx","ly","points","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","segs","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","28","output","vectorA","vectorB","cross3","vectorC","scalar","29","match","parseFloat","mean","average","signed","numerator","denominator","vertice","nextVertice","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","radiusVector","midNormal","scaledVertex","precision","sort","flag","upper","lower","pop","30","RenderPixi","../collision/Contact","../collision/Pair","../collision/Query","../collision/SAT","../constraint/MouseConstraint","../core/Engine","../core/Matter","../core/Metrics","../core/Plugin","../core/Runner","../factory/Composites","../geometry/Svg","../render/RenderPixi","31","background","wireframeBackground","hasBounds","wireframes","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","setPixelRatio","appendChild","loop","_getPixelRatio","setAttribute","style","padding","viewHeight","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","endViewTransform","setTransform","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","debug","debugTimestamp","text","debugString","font","fillText","beginPath","arc","closePath","moveTo","coils","lineTo","stroke","fill","bodyShadows","distanceX","distanceY","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","globalAlpha","texture","_getTexture","drawImage","rect","normalPosX","normalPosY","bucketKeys","inspector","selected","item","data","setLineDash","selectStart","selectBounds","createElement","oncontextmenu","onselectstart","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","imagePath","image","Image","src","cssBackground","backgroundSize","32","renderer","container","spriteContainer","pixiOptions","transparent","antialias","backgroundColor","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","children","removeChild","bgSprite","addChildAt","setBackground","isColor","color","Sprite","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","initialAngle","texturePath","anchor","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage","Authority","instance","requestAuthority","_isAuthority","hasAuthority","default","levelMap_1","physicsEngine_1","init","level","LevelMap","wait","then","showDebugPlayer","showDebugRenderer","./map/levelMap","./physicsEngine","gl_matrix_1","authority_1","matter_js_1","parse","json","createBounds","addLevelObject","getAllLevelObjects","getAllLevelObjectsByType","url","_this","fetch","LevelObject","gateCreatePhysics","createPysics","meta","../../common/authority","../physicsEngine","gl-matrix","matter-js","Directions","PhysicsEngine","transformOrigin","transform","debugElement","append","hideDebugRenderer","player","dir","UP","DOWN","LEFT","RIGHT","Set","delete"],"mappings":"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","file":"index.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setMatrixArrayType = setMatrixArrayType;\nexports.toRadian = toRadian;\nexports.equals = equals;\nexports.RANDOM = exports.ARRAY_TYPE = exports.EPSILON = void 0;\n\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nexports.EPSILON = EPSILON;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexports.ARRAY_TYPE = ARRAY_TYPE;\nvar RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nexports.RANDOM = RANDOM;\n\nfunction setMatrixArrayType(type) {\n  exports.ARRAY_TYPE = ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vec4 = exports.vec3 = exports.vec2 = exports.quat2 = exports.quat = exports.mat4 = exports.mat3 = exports.mat2d = exports.mat2 = exports.glMatrix = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nexports.glMatrix = glMatrix;\n\nvar mat2 = _interopRequireWildcard(require(\"./mat2.js\"));\n\nexports.mat2 = mat2;\n\nvar mat2d = _interopRequireWildcard(require(\"./mat2d.js\"));\n\nexports.mat2d = mat2d;\n\nvar mat3 = _interopRequireWildcard(require(\"./mat3.js\"));\n\nexports.mat3 = mat3;\n\nvar mat4 = _interopRequireWildcard(require(\"./mat4.js\"));\n\nexports.mat4 = mat4;\n\nvar quat = _interopRequireWildcard(require(\"./quat.js\"));\n\nexports.quat = quat;\n\nvar quat2 = _interopRequireWildcard(require(\"./quat2.js\"));\n\nexports.quat2 = quat2;\n\nvar vec2 = _interopRequireWildcard(require(\"./vec2.js\"));\n\nexports.vec2 = vec2;\n\nvar vec3 = _interopRequireWildcard(require(\"./vec3.js\"));\n\nexports.vec3 = vec3;\n\nvar vec4 = _interopRequireWildcard(require(\"./vec4.js\"));\n\nexports.vec4 = vec4;\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n},{\"./common.js\":1,\"./mat2.js\":3,\"./mat2d.js\":4,\"./mat3.js\":5,\"./mat4.js\":6,\"./quat.js\":7,\"./quat2.js\":8,\"./vec2.js\":9,\"./vec3.js\":10,\"./vec4.js\":11}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.str = str;\nexports.frob = frob;\nexports.LDU = LDU;\nexports.add = add;\nexports.subtract = subtract;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\n\nfunction fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\n\nfunction set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\n\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;\n},{\"./common.js\":1}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.invert = invert;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.translate = translate;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromTranslation = fromTranslation;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b, c,\r\n *  d, tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\n\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\n\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\n\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;\n},{\"./common.js\":1}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.fromMat4 = fromMat4;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromMat2d = fromMat2d;\nexports.fromQuat = fromQuat;\nexports.normalFromMat4 = normalFromMat4;\nexports.projection = projection;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\n\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\n\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;\n},{\"./common.js\":1}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.fromTranslation = fromTranslation;\nexports.fromScaling = fromScaling;\nexports.fromRotation = fromRotation;\nexports.fromXRotation = fromXRotation;\nexports.fromYRotation = fromYRotation;\nexports.fromZRotation = fromZRotation;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromQuat2 = fromQuat2;\nexports.getTranslation = getTranslation;\nexports.getScaling = getScaling;\nexports.getRotation = getRotation;\nexports.fromRotationTranslationScale = fromRotationTranslationScale;\nexports.fromRotationTranslationScaleOrigin = fromRotationTranslationScaleOrigin;\nexports.fromQuat = fromQuat;\nexports.frustum = frustum;\nexports.perspective = perspective;\nexports.perspectiveFromFieldOfView = perspectiveFromFieldOfView;\nexports.ortho = ortho;\nexports.lookAt = lookAt;\nexports.targetTo = targetTo;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\n\nfunction fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\n\nfunction getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\n\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;\n},{\"./common.js\":1}],7:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.identity = identity;\nexports.setAxisAngle = setAxisAngle;\nexports.getAxisAngle = getAxisAngle;\nexports.getAngle = getAngle;\nexports.multiply = multiply;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.calculateW = calculateW;\nexports.exp = exp;\nexports.ln = ln;\nexports.pow = pow;\nexports.slerp = slerp;\nexports.random = random;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.fromMat3 = fromMat3;\nexports.fromEuler = fromEuler;\nexports.str = str;\nexports.setAxes = exports.sqlerp = exports.rotationTo = exports.equals = exports.exactEquals = exports.normalize = exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.lerp = exports.dot = exports.scale = exports.mul = exports.add = exports.set = exports.copy = exports.fromValues = exports.clone = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar mat3 = _interopRequireWildcard(require(\"./mat3.js\"));\n\nvar vec3 = _interopRequireWildcard(require(\"./vec3.js\"));\n\nvar vec4 = _interopRequireWildcard(require(\"./vec4.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {quat} a     Origin unit quaternion \r\n * @param  {quat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\n\nfunction getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n * \r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\n\nfunction random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\n\nvar clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexports.clone = clone;\nvar fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.fromValues = fromValues;\nvar copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.copy = copy;\nvar set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.set = set;\nvar add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexports.add = add;\nvar mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.mul = mul;\nvar scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexports.scale = scale;\nvar dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.dot = dot;\nvar lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexports.lerp = lerp;\nvar length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexports.length = length;\nvar len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexports.len = len;\nvar squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\nvar normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexports.normalize = normalize;\nvar exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexports.exactEquals = exactEquals;\nvar equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexports.equals = equals;\n\nvar rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\n\nexports.rotationTo = rotationTo;\n\nvar sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\n\nexports.sqlerp = sqlerp;\n\nvar setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();\n\nexports.setAxes = setAxes;\n},{\"./common.js\":1,\"./mat3.js\":5,\"./vec3.js\":10,\"./vec4.js\":11}],8:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.fromRotationTranslationValues = fromRotationTranslationValues;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromMat4 = fromMat4;\nexports.copy = copy;\nexports.identity = identity;\nexports.set = set;\nexports.getDual = getDual;\nexports.setDual = setDual;\nexports.getTranslation = getTranslation;\nexports.translate = translate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotateByQuatAppend = rotateByQuatAppend;\nexports.rotateByQuatPrepend = rotateByQuatPrepend;\nexports.rotateAroundAxis = rotateAroundAxis;\nexports.add = add;\nexports.multiply = multiply;\nexports.scale = scale;\nexports.lerp = lerp;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.normalize = normalize;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.dot = exports.mul = exports.setReal = exports.getReal = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar quat = _interopRequireWildcard(require(\"./quat.js\"));\n\nvar mat4 = _interopRequireWildcard(require(\"./mat4.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\nfunction create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q a normalized quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\n\nvar getReal = quat.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nexports.getReal = getReal;\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nvar setReal = quat.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.setReal = setReal;\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.mul = mul;\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\n\nvar dot = quat.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nexports.dot = dot;\n\nfunction lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\n\nfunction invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\n\nvar length = quat.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nexports.length = length;\nvar len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexports.len = len;\nvar squaredLength = quat.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nfunction normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\n\nfunction str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}\n},{\"./common.js\":1,\"./mat4.js\":6,\"./quat.js\":7}],9:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat2 = transformMat2;\nexports.transformMat2d = transformMat2d;\nexports.transformMat3 = transformMat3;\nexports.transformMat4 = transformMat4;\nexports.rotate = rotate;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\n\nfunction fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\n\n\nfunction rotate(out, a, b, c) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(c),\n      cosC = Math.cos(c); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1];\n  var len1 = x1 * x1 + y1 * y1;\n\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n\n  var len2 = x2 * x2 + y2 * y2;\n\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\n\nvar len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexports.len = len;\nvar sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;\n},{\"./common.js\":1}],10:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.length = length;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.hermite = hermite;\nexports.bezier = bezier;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformMat3 = transformMat3;\nexports.transformQuat = transformQuat;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\n\nfunction fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\n\nfunction angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;\n},{\"./common.js\":1}],11:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformQuat = transformQuat;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\n\nfunction fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\n\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\n\nfunction cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;\n},{\"./common.js\":1}],12:[function(require,module,exports){\n(function (global){\n/**\n* matter-js 0.14.2 by @liabru 2018-06-11\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Used to require external libraries outside of the bundle.\n     * It first looks for the `globalName` on the environment's global namespace.\n     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n     * @private\n     * @method _requireGlobal\n     * @param {string} globalName The global module name\n     * @param {string} moduleName The fallback CommonJS module name\n     * @return {} The loaded module\n     */\n    Common._requireGlobal = function(globalName, moduleName) {\n        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\n        return obj || _dereq_(moduleName);\n    };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.14.2';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp;\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        if (!decomp) {\n            decomp = Common._requireGlobal('decomp', 'poly-decomp');\n        }\n\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../core/Common\":14,\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],13:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Authority = /** @class */ (function () {\n    function Authority() {\n        this._isAuthority = false;\n    }\n    Authority.get = function () {\n        if (this.instance === undefined) {\n            this.instance = new (Authority);\n        }\n        return this.instance;\n    };\n    Authority.prototype.requestAuthority = function () {\n        this._isAuthority = true;\n    };\n    Authority.prototype.hasAuthority = function () {\n        return this._isAuthority;\n    };\n    return Authority;\n}());\nexports.Authority = Authority;\nexports.default = Authority;\n\n\n\n},{}],14:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar levelMap_1 = require(\"./map/levelMap\");\nvar physicsEngine_1 = require(\"./physicsEngine\");\ndocument.addEventListener('DOMContentLoaded', function () {\n    physicsEngine_1.default.init();\n    var level = new levelMap_1.LevelMap('/level/level1.json');\n    level.wait.then(function () {\n        physicsEngine_1.default.showDebugPlayer();\n        physicsEngine_1.default.showDebugRenderer(level);\n        physicsEngine_1.default.start();\n    });\n});\n\n\n\n},{\"./map/levelMap\":15,\"./physicsEngine\":16}],15:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gl_matrix_1 = require(\"gl-matrix\");\nvar authority_1 = require(\"../../common/authority\");\nvar physicsEngine_1 = require(\"../physicsEngine\");\nvar matter_js_1 = require(\"matter-js\");\nvar LevelMap = /** @class */ (function () {\n    function LevelMap(url) {\n        var _this = this;\n        this.url = url;\n        this.objects = [];\n        this.wait = fetch(url).then(function (result) {\n            return result.json();\n        }).then(function (json) {\n            _this.parse(json);\n        });\n    }\n    LevelMap.prototype.parse = function (json) {\n        this.size = gl_matrix_1.vec2.fromValues(json.size[0], json.size[1]);\n        this.createBounds();\n        // parse levelObjects\n    };\n    LevelMap.prototype.createBounds = function () {\n        if (authority_1.default.get().hasAuthority()) {\n            return;\n        }\n        var width = this.size[0];\n        var height = this.size[1];\n        matter_js_1.World.add(physicsEngine_1.default.world, [\n            matter_js_1.Bodies.rectangle(width / 2, -50, width, 100, { isStatic: true }),\n            matter_js_1.Bodies.rectangle(width / 2, height + 50, width, 100, { isStatic: true }),\n            matter_js_1.Bodies.rectangle(width + 50, height / 2, 100, height + 200, { isStatic: true }),\n            matter_js_1.Bodies.rectangle(-50, height / 2, 100, height + 200, { isStatic: true })\n        ]);\n    };\n    LevelMap.prototype.addLevelObject = function (object) {\n        this.objects.push(object);\n    };\n    LevelMap.prototype.getAllLevelObjects = function () {\n        return this.objects.slice();\n    };\n    LevelMap.prototype.getAllLevelObjectsByType = function (type) {\n        return this.objects.filter(function (e) { return e instanceof type; });\n    };\n    return LevelMap;\n}());\nexports.LevelMap = LevelMap;\nvar LevelObject = /** @class */ (function () {\n    function LevelObject(LevelMap, position, meta) {\n        this.LevelMap = LevelMap;\n        this.position = position;\n        this.meta = meta;\n        LevelMap.addLevelObject(this);\n        this.gateCreatePhysics();\n    }\n    LevelObject.prototype.gateCreatePhysics = function () {\n        if (authority_1.default.get().hasAuthority()) {\n            return;\n        }\n        this.createPysics();\n    };\n    LevelObject.prototype.createPysics = function () { };\n    ;\n    LevelObject.prototype.render = function () {\n        return document.createElement('div');\n    };\n    return LevelObject;\n}());\n\n\n\n},{\"../../common/authority\":13,\"../physicsEngine\":16,\"gl-matrix\":2,\"matter-js\":12}],16:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar matter_js_1 = require(\"matter-js\");\nvar gl_matrix_1 = require(\"gl-matrix\");\nvar maxDebugMapSize = 250;\nvar PhysicsEngine = /** @class */ (function () {\n    function PhysicsEngine() {\n    }\n    PhysicsEngine.init = function () {\n        this.engine = matter_js_1.Engine.create();\n        this.world = this.engine.world;\n        this.world.gravity = {\n            scale: 0,\n            x: 0,\n            y: 0\n        };\n        this.runner = matter_js_1.Runner.create();\n    };\n    PhysicsEngine.start = function () {\n        matter_js_1.Runner.run(this.runner, this.engine);\n    };\n    PhysicsEngine.stop = function () {\n        matter_js_1.Runner.stop(this.runner);\n    };\n    PhysicsEngine.showDebugRenderer = function (map) {\n        if (this.render === undefined) {\n            var scale = Math.min(maxDebugMapSize / map.size[0], maxDebugMapSize / map.size[1]);\n            var element = document.createElement('div');\n            element.style.position = 'fixed';\n            element.style.top = '5px';\n            element.style.left = '5px';\n            element.style.transformOrigin = 'top left';\n            element.style.transform = 'scale(' + scale.toFixed(4) + ')';\n            this.render = matter_js_1.Render.create({\n                element: element,\n                engine: this.engine,\n                options: {\n                    width: map.size[0],\n                    height: map.size[1],\n                    wireframes: false,\n                }\n            });\n            matter_js_1.Render.lookAt(this.render, {\n                min: { x: 0, y: 0 },\n                max: { x: map.size[0], y: map.size[1] }\n            });\n            this.debugElement = element;\n        }\n        matter_js_1.Render.run(this.render);\n        document.body.append(this.debugElement);\n    };\n    PhysicsEngine.hideDebugRenderer = function () {\n        matter_js_1.Render.stop(this.render);\n        document.body.removeChild(this.debugElement);\n    };\n    PhysicsEngine.showDebugPlayer = function () {\n        var player = matter_js_1.Bodies.circle(5, 5, 10, {\n            frictionStatic: 1,\n            frictionAir: 0.4\n        });\n        matter_js_1.World.add(this.world, [player]);\n        matter_js_1.Events.on(this.engine, 'beforeUpdate', function (event) {\n            var dir = gl_matrix_1.vec2.create();\n            if (move.size === 0) {\n                return;\n            }\n            move.forEach(function (e) {\n                switch (e) {\n                    case Directions.UP:\n                        gl_matrix_1.vec2.add(dir, dir, [0, -1]);\n                        break;\n                    case Directions.DOWN:\n                        gl_matrix_1.vec2.add(dir, dir, [0, 1]);\n                        break;\n                    case Directions.LEFT:\n                        gl_matrix_1.vec2.add(dir, dir, [-1, 0]);\n                        break;\n                    case Directions.RIGHT:\n                        gl_matrix_1.vec2.add(dir, dir, [1, 0]);\n                        break;\n                }\n            });\n            gl_matrix_1.vec2.normalize(dir, dir);\n            matter_js_1.Body.applyForce(player, player.position, {\n                x: dir[0] * 0.001,\n                y: dir[1] * 0.001\n            });\n        });\n        var move = new Set();\n        window.addEventListener('keydown', function (e) {\n            switch (e.key) {\n                case 'w':\n                    move.add(Directions.UP);\n                    break;\n                case 's':\n                    move.add(Directions.DOWN);\n                    break;\n                case 'a':\n                    move.add(Directions.LEFT);\n                    break;\n                case 'd':\n                    move.add(Directions.RIGHT);\n                    break;\n            }\n        });\n        window.addEventListener('keyup', function (e) {\n            switch (e.key) {\n                case 'w':\n                    move.delete(Directions.UP);\n                    break;\n                case 's':\n                    move.delete(Directions.DOWN);\n                    break;\n                case 'a':\n                    move.delete(Directions.LEFT);\n                    break;\n                case 'd':\n                    move.delete(Directions.RIGHT);\n                    break;\n            }\n        });\n    };\n    return PhysicsEngine;\n}());\nexports.PhysicsEngine = PhysicsEngine;\nexports.default = PhysicsEngine;\nvar Directions;\n(function (Directions) {\n    Directions[Directions[\"UP\"] = 0] = \"UP\";\n    Directions[Directions[\"DOWN\"] = 1] = \"DOWN\";\n    Directions[Directions[\"LEFT\"] = 2] = \"LEFT\";\n    Directions[Directions[\"RIGHT\"] = 3] = \"RIGHT\";\n})(Directions || (Directions = {}));\n\n\n\n},{\"gl-matrix\":2,\"matter-js\":12}]},{},[14]);\n\n//# sourceMappingURL=index.js.map\n"]}